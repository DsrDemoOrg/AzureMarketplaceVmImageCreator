name: build-packer-images

on:
  push:
    branches:
      - main

env:
  LOCATION: EastUS
  DESTINATION_RESOURCE_GROUP_NAME: dsr-images-rg
  DESTINATION_IMAGE_GALLERY_NAME: dsrimagegallery
  PUBLISHER: "Daniel.Scott-Raynsford"
  AZURE_SUBSCRIPTION_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).subscriptionId }}
  AZURE_TENANT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).tenantId }}
  AZURE_CLIENT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
  AZURE_CLIENT_SECRET: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}

jobs:
  prepare-image-gallery:
    runs-on: ubuntu-latest
    name: Prepare Image Gallery

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Image Gallery Template
        uses: azure/CLI@v1
        with:
          azcliversion: 2.24.2
          inlineScript: |
            date=$(date +"%Y%m%d%H%M")
            az deployment sub create \
              --name "imageGallery-${date}" \
              --location $LOCATION \
              --template-file bicep/main.bicep \
              --parameters location="$LOCATION" resourceGroupName="$DESTINATION_RESOURCE_GROUP_NAME" imageGalleryName="$DESTINATION_IMAGE_GALLERY_NAME"

  build-MicrosoftWindowsServer2016DatacenterVsCode:
    runs-on: ubuntu-latest
    needs: prepare-image-gallery
    name: Build MicrosoftWindowsServer 2016-Datacenter with VS Code
    env:
      PACKER_FILE: "packer/microsoft-windows-server.pkr.hcl"
      IMAGE_NAME: MicrosoftWindowsServer2016DatacenterVsCode
      IMAGE_VERSION: 1.0.0
      IMAGE_DESCRIPTION: "Windows Server 2016 Datacenter with VS Code"
      IMAGE_PUBLISHER: "MicrosoftWindowsServer"
      IMAGE_OFFER: "WindowsServer"
      IMAGE_SKU: "2016-Datacenter"
      OS_TYPE: Windows
      SKU: vscode
      OFFER: free

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Validate Template
        uses: hashicorp/packer-github-actions@master
        with:
          command: validate
          arguments: "-syntax-only"
          target: ${{ env.PACKER_FILE }}

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Image Definition
        uses: azure/CLI@v1
        with:
          azcliversion: 2.24.2
          inlineScript: |
            date=$(date +"%Y%m%d%H%M")
            az deployment group create \
              --name "${IMAGE_NAME}-${date}" \
              --resource-group $DESTINATION_RESOURCE_GROUP_NAME \
              --template-file bicep/modules/imageDefinition.bicep \
              --parameters location="$LOCATION" imageGalleryName="$DESTINATION_IMAGE_GALLERY_NAME" imageDefinitionName="$IMAGE_NAME" osType="$OS_TYPE" imageDescription="$IMAGE_DESCRIPTION" publisher="$PUBLISHER" offer="$OFFER" sku="$SKU"

      - name: Build Artifact
        uses: hashicorp/packer-github-actions@master
        with:
          command: build
          arguments: "-color=false -on-error=abort -var azure_subscription_id=${{ env.AZURE_SUBSCRIPTION_ID }} -var azure_tenant_id=${{ env.AZURE_TENANT_ID }} -var azure_client_id=${{ env.AZURE_CLIENT_ID }} -var azure_client_secret=${{ env.AZURE_CLIENT_SECRET }} -var location=${{ env.LOCATION }} -var destination_resource_group_name=${{ env.DESTINATION_RESOURCE_GROUP_NAME }} -var destination_image_gallery_name=${{ env.DESTINATION_IMAGE_GALLERY_NAME }} -var image_name=${{ env.IMAGE_NAME }} -var image_version=${{ env.IMAGE_VERSION }} -var image_publisher=${{ env.IMAGE_PUBLISHER }} -var image_offer=${{ env.IMAGE_OFFER }} -var image_sku=${{ env.IMAGE_SKU }}"
          target: ${{ env.PACKER_FILE }}
        env:
          PACKER_LOG: 1

  build-MicrosoftWindowsServer2019DatacenterVsCode:
    runs-on: ubuntu-latest
    needs: prepare-image-gallery
    name: Build MicrosoftWindowsServer 2019-Datacenter with VS Code
    env:
      PACKER_FILE: "packer/microsoft-windows-server.pkr.hcl"
      IMAGE_NAME: MicrosoftWindowsServer2016DatacenterVsCode
      IMAGE_VERSION: 1.0.0
      IMAGE_DESCRIPTION: "Windows Server 2016 Datacenter with VS Code"
      IMAGE_PUBLISHER: "MicrosoftWindowsServer"
      IMAGE_OFFER: "WindowsServer"
      IMAGE_SKU: "2019-Datacenter"
      OS_TYPE: Windows
      SKU: vscode
      OFFER: free

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Validate Template
        uses: hashicorp/packer-github-actions@master
        with:
          command: validate
          arguments: "-syntax-only"
          target: ${{ env.PACKER_FILE }}

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Image Definition
        uses: azure/CLI@v1
        with:
          azcliversion: 2.24.2
          inlineScript: |
            date=$(date +"%Y%m%d%H%M")
            az deployment group create \
              --name "${IMAGE_NAME}-${date}" \
              --resource-group $DESTINATION_RESOURCE_GROUP_NAME \
              --template-file bicep/modules/imageDefinition.bicep \
              --parameters location="$LOCATION" imageGalleryName="$DESTINATION_IMAGE_GALLERY_NAME" imageDefinitionName="$IMAGE_NAME" osType="$OS_TYPE" imageDescription="$IMAGE_DESCRIPTION" publisher="$PUBLISHER" offer="$OFFER" sku="$SKU"

      - name: Build Artifact
        uses: hashicorp/packer-github-actions@master
        with:
          command: build
          arguments: "-color=false -on-error=abort -var azure_subscription_id=${{ env.AZURE_SUBSCRIPTION_ID }} -var azure_tenant_id=${{ env.AZURE_TENANT_ID }} -var azure_client_id=${{ env.AZURE_CLIENT_ID }} -var azure_client_secret=${{ env.AZURE_CLIENT_SECRET }} -var location=${{ env.LOCATION }} -var destination_resource_group_name=${{ env.DESTINATION_RESOURCE_GROUP_NAME }} -var destination_image_gallery_name=${{ env.DESTINATION_IMAGE_GALLERY_NAME }} -var image_name=${{ env.IMAGE_NAME }} -var image_version=${{ env.IMAGE_VERSION }} -var image_publisher=${{ env.IMAGE_PUBLISHER }} -var image_offer=${{ env.IMAGE_OFFER }} -var image_sku=${{ env.IMAGE_SKU }}"
          target: ${{ env.PACKER_FILE }}
        env:
          PACKER_LOG: 1
